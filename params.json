{
  "name": "MD360Player4Android",
  "tagline": "It is a lite library to render 360 degree panorama video for Android. VR Player.",
  "body": "# MD360Player4Android\r\nIt is a lite library to render 360 degree panorama video for Android.\r\n[![](https://jitpack.io/v/ashqal/MD360Player4Android.svg)](https://jitpack.io/#ashqal/MD360Player4Android)\r\n\r\n## Preview\r\n![ScreenShot](https://github.com/ashqal/MD360Player4Android/raw/master/app/demo/preview.jpg)\r\n![ScreenShot](https://github.com/ashqal/MD360Player4Android/raw/master/app/demo/preview1.jpg)\r\n![ScreenShot](https://github.com/ashqal/MD360Player4Android/raw/master/app/demo/preview2.jpg)\r\n\r\n## NOTICE\r\n* OpenGLES 2.0 required\r\n* Android 4.0.3 (Ice Cream Sandwich  API-15) required\r\n* Compatible with all Players which have `setSurface` api.\r\n* This library do nothing but render the image of video frame, so you may deal with the issues about `MediaPlayer` or `IjkMediaPlayer` (e.g. play local file, rtmp, hls) by yourself;\r\n* 这个库只负责视频帧画面的渲染，所有的视频文件播放、控制的工作都交给了`MediaPlayer`或者`IjkMediaPlayer`，你可能需要自己处理使用Player过程中出现的问题(比如播放本地文件、rtmp、hls).\r\n\r\n## Last Commit\r\n**`-SNAPSHOT`**\r\n\r\n## Release Note\r\n\r\n**2.0.1.beta**\r\n* bug fix.\r\n* add anti-distortion support.\r\n```java\r\n// init configuation\r\nprotected MDVRLibrary createVRLibrary() {\r\n    return MDVRLibrary.with(this)\r\n            ...\r\n            .barrelDistortionConfig(new BarrelDistortionConfig().setDefaultEnabled(true).setScale(0.95f))\r\n            .build(R.id.gl_view);\r\n}\r\n```\r\n```java\r\n// setter\r\nmVRLibrary.setAntiDistortionEnabled(true);\r\n```\r\n\r\n* hotspot support.\r\n```java\r\n// add hotspot dynamicly.\r\nfindViewById(R.id.button_add_plugin_logo).setOnClickListener(new View.OnClickListener() {\r\n    @Override\r\n    public void onClick(View v) {\r\n        private MDPosition logoPosition = MDPosition.newInstance().setY(-8.0f).setYaw(-90.0f);\r\n        MDSimplePlugin plugin = MDSimplePlugin.builder()\r\n                .size(4f,4f)\r\n                .provider(new MDVRLibrary.IBitmapProvider() {\r\n                    @Override\r\n                    public void onProvideBitmap(MD360BitmapTexture.Callback callback) {\r\n                        Bitmap bitmap = BitmapFactory.decodeResource(getResources(), R.drawable.moredoo_logo);\r\n                        callback.texture(bitmap);\r\n                    }\r\n                })\r\n                .title(\"logo\")\r\n                .position(logoPosition)\r\n                .listenClick(new MDVRLibrary.IPickListener() {\r\n                    @Override\r\n                    public void onHotspotHit(IMDHotspot hotspot, long hitTimestamp) {\r\n                        Toast.makeText(MD360PlayerActivity.this, \"click logo\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                })\r\n                .build();\r\n\r\n        plugins.add(plugin);\r\n        getVRLibrary().addPlugin(plugin);\r\n        Toast.makeText(MD360PlayerActivity.this, \"add plugin logo\" , Toast.LENGTH_SHORT).show();\r\n    }\r\n});\r\n```\r\n\r\n* eye picker\r\n```java\r\n// setEyePickChangedListener dynamicly.\r\nfinal TextView hotspotText = (TextView) findViewById(R.id.hotspot_text);\r\ngetVRLibrary().setEyePickChangedListener(new MDVRLibrary.IPickListener() {\r\n    @Override\r\n    public void onHotspotHit(IMDHotspot hotspot, long hitTimestamp) {\r\n        String text = hotspot == null ? \"nop\" : String.format(Locale.CHINESE, \"%s  %fs\", hotspot.getTitle(), (System.currentTimeMillis() - hitTimestamp) / 1000.0f );\r\n        hotspotText.setText(text);\r\n    }\r\n});\r\n```\r\n```java\r\n// disable the eye picker\r\ngetVRLibrary().eyePickEanbled(false);\r\n```\r\n\r\n**1.5.3**\r\n* Keep the GLContext instance onPause.\r\n* GLTextureView supported!\r\n\r\n**1.5.0**\r\n* make the switch mode public. `switchInteractiveMode(Activity activity, int mode)` , `switchDisplayMode(Activity activity, int mode)` and `switchProjectionMode(Activity activity, int mode)`.\r\n* add dome support. \r\n* add stereo support.\r\n* add plane support.\r\n* switch projection in runtime support.\r\n\r\n**1.4.0**\r\n* better way to render multi screen. note:*Only one GLSurfaceView required now* !!\r\n* `.build(R.id.surface_view1,R.id.surface_view2)` => `.build(R.id.surface_view)`\r\n* add motion with touch strategy.\r\n\r\n**1.3.0**\r\n* add some reset function, such as `MDVRLibrary#resetPinch`,`MDVRLibrary#resetTouch`\r\n* support sensor delay configuration in motion mode\r\n* support sensorCallback\r\n* fix a crucial bug: has an line in the center of the sphere\r\n\r\n**1.2.0**\r\n* pinch gesture supported\r\n* changed the way to listen onClick event\r\n* fix the image distortion on the polar of sphere\r\n\r\n**1.1.0**\r\n* Bitmap supported. For more info, See [BitmapPlayerActivity](https://github.com/ashqal/MD360Player4Android/tree/master/app/src/main/java/com/asha/md360player4android/BitmapPlayerActivity.java) in demo.\r\n* Add callback if the TYPE_ROTATION_VECTOR is NOT supported.\r\n* Use more divisions in sphere and load `.obj` file in working thread.\r\n* Bug fix: Can not drag after setOnClickListener.\r\n* Switch to [IjkMediaPlayer](https://github.com/Bilibili/ijkplayer) in demo.\r\n\r\n**1.0.0**\r\n* Motion Sensor\r\n* Glass Mode(multi-screen)\r\n* Fix a few bugs.\r\n* More easier.\r\n* Worked with MediaPlayer or ijkMediaPlayer.\r\n\r\n## Gradle\r\n```java\r\nallprojects {\r\n    repositories {\r\n        ...\r\n        maven { url \"https://jitpack.io\" }\r\n    }\r\n}\r\n```\r\n```java\r\ndependencies {\r\n    compile 'com.github.ashqal:MD360Player4Android:1.5.3'\r\n}\r\n```\r\n\r\n## USAGE\r\n### Using with GLSurfaceView\r\n**STEP1** Define `GLSurfaceView` in the layout xml.\r\n```java\r\n<android.opengl.GLSurfaceView\r\n   android:id=\"@+id/surface_view\"\r\n   android:layout_width=\"match_parent\"\r\n   android:layout_height=\"match_parent\" />\r\n```\r\n\r\n**STEP2** Init the `MDVRLibrary` in the Activity.\r\n```java\r\npublic class MDVRLibraryDemoActivity extends MediaPlayerActivity {\r\n\r\n    private MDVRLibrary mVRLibrary;\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_md_render);\r\n\r\n        // init VR Library\r\n        initVRLibrary();\r\n    }\r\n\r\n    private void initVRLibrary(){\r\n        // new instance\r\n        mVRLibrary = MDVRLibrary.with(this)\r\n                    .displayMode(MDVRLibrary.DISPLAY_MODE_NORMAL)\r\n                    .interactiveMode(MDVRLibrary.INTERACTIVE_MODE_MOTION)\r\n                    .video(new MDVRLibrary.IOnSurfaceReadyCallback() {\r\n                        @Override\r\n                        public void onSurfaceReady(Surface surface) {\r\n                            // IjkMediaPlayer or MediaPlayer\r\n                            getPlayer().setSurface(surface);\r\n                        }\r\n                    })\r\n                    .build(R.id.surface_view);\r\n    }\r\n}\r\n```\r\n\r\n**STEP3** Addition call in `onTouchEvent` `onResume` `onPause` `onDestroy`.\r\n```java\r\npublic class MDVRLibraryDemoActivity extends MediaPlayerActivity {\r\n    @Override\r\n    public boolean onTouchEvent(MotionEvent event) {\r\n        return mVRLibrary.handleTouchEvent(event) || super.onTouchEvent(event);\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        mVRLibrary.onResume(this);\r\n    }\r\n\r\n    @Override\r\n    protected void onPause() {\r\n        super.onPause();\r\n        mVRLibrary.onPause(this);\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        mVRLibrary.onDestroy();\r\n    }\r\n}\r\n```\r\n\r\n### Click Listener\r\n`Builder#gesture`\r\n```java\r\n@Override\r\nprotected MDVRLibrary createVRLibrary() {\r\n    return MDVRLibrary.with(this)\r\n            .....\r\n            .gesture(new MDVRLibrary.IGestureListener() {\r\n                @Override\r\n                public void onClick(MotionEvent e) {\r\n                    Toast.makeText(VideoPlayerActivity.this, \"onClick!\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            })\r\n            .build(R.id.surface_view);\r\n}\r\n\r\n```\r\n\r\n### Enable the pinch\r\n`Builder#pinchEnabled`\r\n```java\r\n@Override\r\nprotected MDVRLibrary createVRLibrary() {\r\n    return MDVRLibrary.with(this)\r\n            .....\r\n            .pinchEnabled(true) //disable by default\r\n            .build(R.id.surface_view);\r\n}\r\n```\r\n\r\n### Feature not support callback\r\nadd `ifNotSupport` to builder, e.g. [VideoPlayerActivity#createVRLibrary](https://github.com/ashqal/MD360Player4Android/blob/master/app/src/main/java/com/asha/md360player4android/VideoPlayerActivity.java)\r\n\r\n```java\r\n@Override\r\nprotected MDVRLibrary createVRLibrary() {\r\n    return MDVRLibrary.with(this)\r\n            .....\r\n            .ifNotSupport(new MDVRLibrary.INotSupportCallback() {\r\n                @Override\r\n                public void onNotSupport(int mode) {\r\n                    String tip = mode == MDVRLibrary.INTERACTIVE_MODE_MOTION\r\n                            ? \"onNotSupport:MOTION\" : \"onNotSupport:\" + String.valueOf(mode);\r\n                    Toast.makeText(VideoPlayerActivity.this, tip, Toast.LENGTH_SHORT).show();\r\n                }\r\n            })\r\n            .build(R.id.surface_view);\r\n}\r\n\r\n```\r\n\r\n### MD360Director Customize (since 1.2.0)\r\n```java\r\n@Override\r\nprotected MDVRLibrary createVRLibrary() {\r\n    return MDVRLibrary.with(this)\r\n            ...\r\n            .directorFactory(new DirectorFactory()) //替换默认MD360DirectorFactory\r\n            ...\r\n            .build(R.id.surface_view);\r\n}\r\n\r\nprivate static class DirectorFactory extends MD360DirectorFactory{\r\n    @Override\r\n    public MD360Director createDirector(int index) {\r\n        switch (index){\r\n            // setAngle: angle to rotate in degrees\r\n            case 1:   return MD360Director.builder().setAngle(20).setEyeX(-2.0f).setLookX(-2.0f).build();\r\n            default:  return MD360Director.builder().setAngle(20).build();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n### Motion configuration (since 1.3.0)\r\n* support sensor delay configuration in motion mode.\r\n```java\r\nMDVRLibrary.with(this)\r\n....\r\n.motionDelay(SensorManager.SENSOR_DELAY_GAME)\r\n...\r\n.build(R.id.surface_view);\r\n```\r\n* support sensorCallback\r\n```java\r\nMDVRLibrary.with(this)\r\n....\r\n.sensorCallback(new SensorEventListener() {\r\n    @Override\r\n    public void onSensorChanged(SensorEvent event) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onAccuracyChanged(Sensor sensor, int accuracy) {\r\n\r\n    }\r\n})\r\n....\r\n.build(R.id.surface_view);\r\n```\r\n\r\n### Switch projection (since 1.5.0)\r\n```java\r\n// projection mode in MDVRLibrary.java\r\npublic static final int PROJECTION_MODE_SPHERE = 201;\r\npublic static final int PROJECTION_MODE_DOME180 = 202;\r\npublic static final int PROJECTION_MODE_DOME230 = 203;\r\npublic static final int PROJECTION_MODE_DOME180_UPPER = 204;\r\npublic static final int PROJECTION_MODE_DOME230_UPPER = 205;\r\npublic static final int PROJECTION_MODE_STEREO_SPHERE = 206;\r\npublic static final int PROJECTION_MODE_PLANE_FIT = 207;\r\npublic static final int PROJECTION_MODE_PLANE_CROP = 208;\r\npublic static final int PROJECTION_MODE_PLANE_FULL = 209;\r\n\r\n// You should call MDVRLibrary#onTextureResize(float width, float height)\r\n// If you are using DOME projection and PLANE projection.\r\n\r\n@Override\r\nprotected MDVRLibrary createVRLibrary() {\r\n    return MDVRLibrary.with(this)\r\n    \t\t...\r\n            .projectionMode(MDVRLibrary.PROJECTION_MODE_STEREO_SPHERE)\r\n            ...\r\n            .build(R.id.surface_view);\r\n}\r\n\r\n// switch in runtime\r\n// MDVRLibrary#switchProjectionMode(Activity activity, int mode)\r\n```\r\n\r\n## Reference\r\n* [HTY360Player(360 VR Player for iOS)](https://github.com/hanton/HTY360Player)\r\n* [NitroAction360(VR player for Android)](https://github.com/Nitro888/NitroAction360)\r\n* [Learn-OpenGLES-Tutorials](https://github.com/learnopengles/Learn-OpenGLES-Tutorials)\r\n* [ANDROID高性能图形处理之二.OPENGL ES](http://tangzm.com/blog/?p=20)\r\n* [Moredoo.com](http://www.moredoo.com/)\r\n\r\n## iOS Version\r\n[MD360Player4iOS](https://github.com/ashqal/MD360Player4iOS)\r\n\r\n## Feedback\r\n* Open a new issue.\r\n* or ashqalcn@gmail.com\r\n* or QQ Group.<br/>\r\n![QQ Group](https://cloud.githubusercontent.com/assets/5126517/16213934/e398b010-3785-11e6-8877-5d88d9dc3f33.jpeg)\r\n\r\n##LICENSE\r\n```\r\nCopyright 2016 Asha\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}